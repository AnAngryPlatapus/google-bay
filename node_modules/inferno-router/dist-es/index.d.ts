import Link from './Link';
import IndexLink from './IndexLink';
import Route from './Route';
import IndexRoute from './IndexRoute';
import Redirect from './Redirect';
import Router from './Router';
import match from './match';
import createRoutes, { IPlainRouteConfig } from './createRoutes';
import RouterContext from './RouterContext';
import { VNode } from 'inferno';
export { VNode, Route, IndexRoute, Redirect, Redirect as IndexRedirect, Router, RouterContext, Link, IndexLink, match, createRoutes, IPlainRouteConfig };
declare var _default: {
    Route: typeof Route;
    IndexRoute: typeof IndexRoute;
    Redirect: typeof Redirect;
    IndexRedirect: typeof Redirect;
    Router: typeof Router;
    RouterContext: typeof RouterContext;
    Link: (props: any, {router}: {
        router: any;
    }) => VNode;
    IndexLink: (props: any) => VNode;
    match: (routes: any, currentURL: any) => any;
    createRoutes: (routeConfig: IPlainRouteConfig[]) => VNode[];
};
export default _default;
