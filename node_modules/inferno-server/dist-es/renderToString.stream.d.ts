/// <reference types="node" />
import { Readable } from 'stream';
export declare class RenderStream extends Readable {
    initNode: any;
    staticMarkup: any;
    started: boolean;
    constructor(initNode: any, staticMarkup: any);
    _read(): void;
    renderNode(vNode: any, context: any, isRoot: any): any;
    renderComponent(vComponent: any, isRoot: any, context: any, isClass: any): any;
    renderChildren(children: any, context?: any): any;
    renderText(vNode: any, isRoot: any, context: any): Promise<void>;
    renderElement(vElement: any, isRoot: any, context: any): any;
}
export default function streamAsString(node: any): RenderStream;
export declare function streamAsStaticMarkup(node: any): RenderStream;
